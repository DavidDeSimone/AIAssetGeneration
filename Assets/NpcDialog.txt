

Shader "Custom/Orange Outline" {
    Properties {
        _MainTex ("Texture", 2D) = "white" {}
        _OutlineColor ("Outline Color", Color) = (1,0.5,0,1)
        _OutlineWidth ("Outline Width", Range(0.01,0.1)) = 0.05
    } 

    SubShader {
        Tags {"Queue"="Transparent" "RenderType"="Opaque"}
        LOD 100
    
        Pass {
            CGPROGRAM
            #pragma vertex vert
            #pragma fragment frag
            #include "UnityCG.cginc"
    
            struct appdata {
                float4 vertex : POSITION;
                float2 uv : TEXCOORD0;
            };
    
            struct v2f {
                float2 uv : TEXCOORD0;
                float4 vertex : SV_POSITION;
            };
    
            float _OutlineWidth;
            float4 _OutlineColor;
    
            v2f vert (appdata v) {
                v2f o;
                o.vertex = UnityObjectToClipPos(v.vertex);
                o.uv = v.uv.xy;
                return o;
            }
    
            float4 frag (v2f i) : SV_Target {
                float4 col = tex2D(_MainTex, i.uv);
                float4 outline = tex2D(_MainTex, i.uv + float2(1,0) * _OutlineWidth);
                outline += tex2D(_MainTex, i.uv + float2(0,1) * _OutlineWidth);
                outline += tex2D(_MainTex, i.uv + float2(-1,0) * _OutlineWidth);
                outline += tex2D(_MainTex, i.uv + float2(0,-1) * _OutlineWidth);
                outline /= 4.0;
                col = lerp(col, _OutlineColor, (1.0 - outline.a));
                return col;
            }
            ENDCG
        }
    }
    FallBack "Diffuse"
}